[
  {
    "url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4318",
    "repository_url": "https://api.github.com/repos/tidyverse/ggplot2",
    "labels_url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4318/labels{/name}",
    "comments_url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4318/comments",
    "events_url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4318/events",
    "html_url": "https://github.com/tidyverse/ggplot2/pull/4318",
    "id": 787559609,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NTU2MjM4MDg1",
    "number": 4318,
    "title": "Multiply colourbar linewidth parameters with *.pt (#4314)",
    "user": {
      "login": "teunbrand",
      "id": 49372158,
      "node_id": "MDQ6VXNlcjQ5MzcyMTU4",
      "avatar_url": "https://avatars3.githubusercontent.com/u/49372158?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/teunbrand",
      "html_url": "https://github.com/teunbrand",
      "followers_url": "https://api.github.com/users/teunbrand/followers",
      "following_url": "https://api.github.com/users/teunbrand/following{/other_user}",
      "gists_url": "https://api.github.com/users/teunbrand/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/teunbrand/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/teunbrand/subscriptions",
      "organizations_url": "https://api.github.com/users/teunbrand/orgs",
      "repos_url": "https://api.github.com/users/teunbrand/repos",
      "events_url": "https://api.github.com/users/teunbrand/events{/privacy}",
      "received_events_url": "https://api.github.com/users/teunbrand/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2021-01-16T21:51:27Z",
    "updated_at": "2021-01-16T22:58:48Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "pull_request": {
      "url": "https://api.github.com/repos/tidyverse/ggplot2/pulls/4318",
      "html_url": "https://github.com/tidyverse/ggplot2/pull/4318",
      "diff_url": "https://github.com/tidyverse/ggplot2/pull/4318.diff",
      "patch_url": "https://github.com/tidyverse/ggplot2/pull/4318.patch"
    },
    "body": "This PR aims to set straight a small inconsistency in the way the colourbar guide handles linewidths and fixes #4314.\r\nIt multiplies the `frame.linewidth` and `ticks.linewidth` parameters with `.pt` before giving these to `gpar()`.\r\nDefaults are inversely transformed to not cause visual changes for users and in tests.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4317",
    "repository_url": "https://api.github.com/repos/tidyverse/ggplot2",
    "labels_url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4317/labels{/name}",
    "comments_url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4317/comments",
    "events_url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4317/events",
    "html_url": "https://github.com/tidyverse/ggplot2/issues/4317",
    "id": 787559415,
    "node_id": "MDU6SXNzdWU3ODc1NTk0MTU=",
    "number": 4317,
    "title": "guide_axis(n.dodge) ",
    "user": {
      "login": "sbaross",
      "id": 41447413,
      "node_id": "MDQ6VXNlcjQxNDQ3NDEz",
      "avatar_url": "https://avatars2.githubusercontent.com/u/41447413?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sbaross",
      "html_url": "https://github.com/sbaross",
      "followers_url": "https://api.github.com/users/sbaross/followers",
      "following_url": "https://api.github.com/users/sbaross/following{/other_user}",
      "gists_url": "https://api.github.com/users/sbaross/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sbaross/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sbaross/subscriptions",
      "organizations_url": "https://api.github.com/users/sbaross/orgs",
      "repos_url": "https://api.github.com/users/sbaross/repos",
      "events_url": "https://api.github.com/users/sbaross/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sbaross/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2021-01-16T21:50:26Z",
    "updated_at": "2021-01-16T21:50:26Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "When using `guide_axis(n.dodge)` in a faceted plot, the first label of each facet always starts in the top line, instead of the dodging being continuous across the facets. Depending on the number of axis labels, this can cause labels to be next to each other & overlap instead of on alternating lines.\r\n\r\nExample:\r\n```r\r\ndf <- tibble(x = rep(c(\"a long axis label\", \"another long axis label\", \"the third long axis label\"), 2),\r\n             y = c(1, 2, 3, 3, 2, 1),\r\n             z = rep(c(\"A\", \"B\"), each = 3))\r\n\r\nggplot(df, aes(x = x, y = y)) +\r\n  geom_col() +\r\n  scale_x_discrete(guide = guide_axis(n.dodge = 2)) +\r\n  facet_wrap(vars(z))\r\n```\r\n![Rplot01](https://user-images.githubusercontent.com/41447413/104823746-5d397880-5844-11eb-89b3-7121b6aca9d0.png)\r\n\r\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4316",
    "repository_url": "https://api.github.com/repos/tidyverse/ggplot2",
    "labels_url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4316/labels{/name}",
    "comments_url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4316/comments",
    "events_url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4316/events",
    "html_url": "https://github.com/tidyverse/ggplot2/issues/4316",
    "id": 784978209,
    "node_id": "MDU6SXNzdWU3ODQ5NzgyMDk=",
    "number": 4316,
    "title": "Meridians end before the pole when using polar stereographic crs in coord_sf and asymmetric limits",
    "user": {
      "login": "MikkoVihtakari",
      "id": 4095204,
      "node_id": "MDQ6VXNlcjQwOTUyMDQ=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/4095204?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MikkoVihtakari",
      "html_url": "https://github.com/MikkoVihtakari",
      "followers_url": "https://api.github.com/users/MikkoVihtakari/followers",
      "following_url": "https://api.github.com/users/MikkoVihtakari/following{/other_user}",
      "gists_url": "https://api.github.com/users/MikkoVihtakari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MikkoVihtakari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MikkoVihtakari/subscriptions",
      "organizations_url": "https://api.github.com/users/MikkoVihtakari/orgs",
      "repos_url": "https://api.github.com/users/MikkoVihtakari/repos",
      "events_url": "https://api.github.com/users/MikkoVihtakari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MikkoVihtakari/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2021-01-13T10:23:58Z",
    "updated_at": "2021-01-13T17:11:06Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I found unexpected behavior of `coord_sf()`. Not sure whether this has been reported already. Any solution available?\r\n\r\n``` r\r\nlibrary(ggplot2)\r\n\r\nggplot() + \r\n  coord_sf( xlim = c(-4500000 , 4500000), ylim = c(-4500000, 4500000), crs = 3995) # as expected\r\n```\r\n\r\n![](https://i.imgur.com/0zpDWzp.png)\r\n\r\n``` r\r\n\r\nggplot() + \r\n  coord_sf( xlim = c(-4500000 , 4500000), ylim = c(-2500000, 4500000), crs = 3995) # meridians end before the pole\r\n```\r\n\r\n![](https://i.imgur.com/YY7anIU.png)\r\n\r\n<sup>Created on 2021-01-13 by the [reprex package](https://reprex.tidyverse.org) (v0.3.0)</sup>",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4315",
    "repository_url": "https://api.github.com/repos/tidyverse/ggplot2",
    "labels_url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4315/labels{/name}",
    "comments_url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4315/comments",
    "events_url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4315/events",
    "html_url": "https://github.com/tidyverse/ggplot2/pull/4315",
    "id": 784618307,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NTUzNzgxNzI0",
    "number": 4315,
    "title": "Facets now don't fail if faceting vars are COL, ROW, etc.",
    "user": {
      "login": "eliocamp",
      "id": 8617595,
      "node_id": "MDQ6VXNlcjg2MTc1OTU=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8617595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/eliocamp",
      "html_url": "https://github.com/eliocamp",
      "followers_url": "https://api.github.com/users/eliocamp/followers",
      "following_url": "https://api.github.com/users/eliocamp/following{/other_user}",
      "gists_url": "https://api.github.com/users/eliocamp/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/eliocamp/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/eliocamp/subscriptions",
      "organizations_url": "https://api.github.com/users/eliocamp/orgs",
      "repos_url": "https://api.github.com/users/eliocamp/repos",
      "events_url": "https://api.github.com/users/eliocamp/events{/privacy}",
      "received_events_url": "https://api.github.com/users/eliocamp/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2021-01-12T21:49:23Z",
    "updated_at": "2021-01-16T21:58:49Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "pull_request": {
      "url": "https://api.github.com/repos/tidyverse/ggplot2/pulls/4315",
      "html_url": "https://github.com/tidyverse/ggplot2/pull/4315",
      "diff_url": "https://github.com/tidyverse/ggplot2/pull/4315.diff",
      "patch_url": "https://github.com/tidyverse/ggplot2/pull/4315.patch"
    },
    "body": "This will close #4138. \r\n\r\nWorks around the issue of duplicated column names by explicitly selecting either data columns or layout columns in the `layout` data.frame when needed. Added tests that pass. \r\n\r\nreprex :)\r\n\r\n``` r\r\nlibrary(ggplot2)\r\nmtcars$PANEL <- mtcars$cyl\r\n\r\n\r\nggplot(mtcars, aes(hp, mpg)) +\r\n  geom_point() +\r\n  facet_grid(cyl ~  am) \r\n```\r\n\r\n![](https://i.imgur.com/vQ8g8XO.png)\r\n\r\n``` r\r\n\r\nggplot(mtcars, aes(hp, mpg)) +\r\n  geom_point() +\r\n  facet_grid(PANEL ~  am) \r\n```\r\n\r\n![](https://i.imgur.com/5euvaDX.png)\r\n\r\n<sup>Created on 2021-01-12 by the [reprex package](https://reprex.tidyverse.org) (v0.3.0)</sup>",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4314",
    "repository_url": "https://api.github.com/repos/tidyverse/ggplot2",
    "labels_url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4314/labels{/name}",
    "comments_url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4314/comments",
    "events_url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4314/events",
    "html_url": "https://github.com/tidyverse/ggplot2/issues/4314",
    "id": 784524486,
    "node_id": "MDU6SXNzdWU3ODQ1MjQ0ODY=",
    "number": 4314,
    "title": "Colourbar tick and frame linewidths",
    "user": {
      "login": "teunbrand",
      "id": 49372158,
      "node_id": "MDQ6VXNlcjQ5MzcyMTU4",
      "avatar_url": "https://avatars3.githubusercontent.com/u/49372158?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/teunbrand",
      "html_url": "https://github.com/teunbrand",
      "followers_url": "https://api.github.com/users/teunbrand/followers",
      "following_url": "https://api.github.com/users/teunbrand/following{/other_user}",
      "gists_url": "https://api.github.com/users/teunbrand/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/teunbrand/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/teunbrand/subscriptions",
      "organizations_url": "https://api.github.com/users/teunbrand/orgs",
      "repos_url": "https://api.github.com/users/teunbrand/repos",
      "events_url": "https://api.github.com/users/teunbrand/events{/privacy}",
      "received_events_url": "https://api.github.com/users/teunbrand/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2021-01-12T19:24:25Z",
    "updated_at": "2021-01-16T21:45:00Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "Hello there,\r\n\r\nThis is just a minor inconsistency, but in case this wasn't noticed yet, here it is. Apparently, `guide_colourbar()` uses the `ticks.linewidth` and `frame.linewidth` parameter as-is, while in the rest of ggplot2 (as far as I can tell), almost every parameter for linewidth is calculated as below:\r\n\r\n```\r\n# Right before handing `supplied_value` to grid\r\nlwd = supplied_value * .pt\r\n```\r\n\r\nHere is a reprex with exaggerated line sizes. You can notice when comparing the width of `geom_line()` versus the colourbar guide ticks. The lines appear of the same width when you adjust `ticks.linewidth = 5 * .pt`.\r\n\r\n``` r\r\n\r\nlibrary(ggplot2)\r\n\r\ndf <- data.frame(x = c(0, 1), y = c(0.5, 0.5))\r\n\r\nggplot(df, aes(x, y)) +\r\n  geom_point(aes(colour = x)) +\r\n  geom_line(size = 5) +\r\n  scale_colour_gradientn(\r\n    colours = c(\"white\", \"white\"),\r\n    guide = guide_colourbar(ticks.colour = \"black\", ticks.linewidth = 5)\r\n  )\r\n```\r\n\r\n![](https://i.imgur.com/tkrddYa.png)\r\n\r\n<sup>Created on 2021-01-12 by the [reprex package](https://reprex.tidyverse.org) (v0.3.0)</sup>\r\n\r\nThanks for reading!\r\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4313",
    "repository_url": "https://api.github.com/repos/tidyverse/ggplot2",
    "labels_url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4313/labels{/name}",
    "comments_url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4313/comments",
    "events_url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4313/events",
    "html_url": "https://github.com/tidyverse/ggplot2/issues/4313",
    "id": 783695138,
    "node_id": "MDU6SXNzdWU3ODM2OTUxMzg=",
    "number": 4313,
    "title": "Allow scale name to be a function. ",
    "user": {
      "login": "eliocamp",
      "id": 8617595,
      "node_id": "MDQ6VXNlcjg2MTc1OTU=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8617595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/eliocamp",
      "html_url": "https://github.com/eliocamp",
      "followers_url": "https://api.github.com/users/eliocamp/followers",
      "following_url": "https://api.github.com/users/eliocamp/following{/other_user}",
      "gists_url": "https://api.github.com/users/eliocamp/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/eliocamp/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/eliocamp/subscriptions",
      "organizations_url": "https://api.github.com/users/eliocamp/orgs",
      "repos_url": "https://api.github.com/users/eliocamp/repos",
      "events_url": "https://api.github.com/users/eliocamp/events{/privacy}",
      "received_events_url": "https://api.github.com/users/eliocamp/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 6,
    "created_at": "2021-01-11T20:51:50Z",
    "updated_at": "2021-01-12T01:45:08Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "I think it might be useful to have the possibility of passing a function to scale names like so:\r\n\r\n``` r\r\nlibrary(ggplot2)\r\n\r\ndf <- expand.grid(X1 = 1:10, X2 = 1:10)\r\ndf$value <- df$X1 * df$X2\r\np1 <- ggplot(df, aes(X1, X2)) + geom_tile(aes(fill = value))\r\n\r\np1 + scale_fill_continuous(function(x) base::toupper(x))\r\n```\r\n\r\n![](https://i.imgur.com/lVvyRgF.png)\r\n\r\n``` r\r\n# With function shorthand\r\np1 + scale_fill_continuous(~ base::toupper(.x))\r\n```\r\n\r\n![](https://i.imgur.com/iA4Pi4a.png)\r\n\r\n<sup>Created on 2021-01-11 by the [reprex package](https://reprex.tidyverse.org) (v0.3.0)</sup>\r\n\r\nSomething like this would make code snippets more portable. In my case, I have a function that makes a plot and I had to define the title outside the plot depending on the function arguments. With this, I could've defined a global dictionary which translates column names to actual (human readable) variable names and re-use that all over my report. \r\n\r\nTo produce the code above I just added this\r\n\r\n```r\r\n  if (is.formula(name)) {\r\n    name <- as_function(name)\r\n  }\r\n\r\n  if (is.function(name)) {\r\n    make_title <- name\r\n    name <- waiver()\r\n  } else {\r\n    make_title <- super$make_title\r\n  }\r\n```\r\n\r\n\r\nbefore this line: \r\n\r\nhttps://github.com/tidyverse/ggplot2/blob/master/R/scale-.r#L107\r\n\r\nAnd then added `make_title = make_title` to the ggproto construction. \r\n\r\nAll tests pass, so changing this should be safe. ",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4311",
    "repository_url": "https://api.github.com/repos/tidyverse/ggplot2",
    "labels_url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4311/labels{/name}",
    "comments_url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4311/comments",
    "events_url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4311/events",
    "html_url": "https://github.com/tidyverse/ggplot2/pull/4311",
    "id": 781354893,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NTUxMDkzMjY3",
    "number": 4311,
    "title": "Update vdiffr cases for sf 0.9-7",
    "user": {
      "login": "yutannihilation",
      "id": 1978793,
      "node_id": "MDQ6VXNlcjE5Nzg3OTM=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1978793?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yutannihilation",
      "html_url": "https://github.com/yutannihilation",
      "followers_url": "https://api.github.com/users/yutannihilation/followers",
      "following_url": "https://api.github.com/users/yutannihilation/following{/other_user}",
      "gists_url": "https://api.github.com/users/yutannihilation/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yutannihilation/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yutannihilation/subscriptions",
      "organizations_url": "https://api.github.com/users/yutannihilation/orgs",
      "repos_url": "https://api.github.com/users/yutannihilation/repos",
      "events_url": "https://api.github.com/users/yutannihilation/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yutannihilation/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2021-01-07T14:30:48Z",
    "updated_at": "2021-01-07T14:47:44Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "pull_request": {
      "url": "https://api.github.com/repos/tidyverse/ggplot2/pulls/4311",
      "html_url": "https://github.com/tidyverse/ggplot2/pull/4311",
      "diff_url": "https://github.com/tidyverse/ggplot2/pull/4311.diff",
      "patch_url": "https://github.com/tidyverse/ggplot2/pull/4311.patch"
    },
    "body": "It seems sf 0.9-7 (published on CRAN yesterday) introduced a small change on axis labels. This pull request is to update the cases.\r\n\r\n### Before\r\n![before](https://user-images.githubusercontent.com/1978793/103903823-bec05f80-513f-11eb-8920-99d5342766ec.png)\r\n\r\n### After\r\n![after](https://user-images.githubusercontent.com/1978793/103903957-f4654880-513f-11eb-84c5-011d77378c5a.png)\r\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4308",
    "repository_url": "https://api.github.com/repos/tidyverse/ggplot2",
    "labels_url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4308/labels{/name}",
    "comments_url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4308/comments",
    "events_url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4308/events",
    "html_url": "https://github.com/tidyverse/ggplot2/issues/4308",
    "id": 779249866,
    "node_id": "MDU6SXNzdWU3NzkyNDk4NjY=",
    "number": 4308,
    "title": "Error with date scale and Infinity (geom_segment)",
    "user": {
      "login": "DanChaltiel",
      "id": 15105152,
      "node_id": "MDQ6VXNlcjE1MTA1MTUy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/15105152?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DanChaltiel",
      "html_url": "https://github.com/DanChaltiel",
      "followers_url": "https://api.github.com/users/DanChaltiel/followers",
      "following_url": "https://api.github.com/users/DanChaltiel/following{/other_user}",
      "gists_url": "https://api.github.com/users/DanChaltiel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DanChaltiel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DanChaltiel/subscriptions",
      "organizations_url": "https://api.github.com/users/DanChaltiel/orgs",
      "repos_url": "https://api.github.com/users/DanChaltiel/repos",
      "events_url": "https://api.github.com/users/DanChaltiel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DanChaltiel/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2021-01-05T16:24:09Z",
    "updated_at": "2021-01-05T18:19:08Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "To emphasize a certain point, you might want to actually draw its coordinates using `geom_segment()`.\r\n\r\nWhen using  `geom_segment()`, you can use `Inf` if the mapping so that the segment will start on the edge of the plot.\r\n\r\nHowever, if you use `Inf` like this on an axis of class `Date`, it will throw an error:\r\n\r\n> `Error: Invalid input: date_trans works with objects of class Date only`\r\n\r\n\r\nHere is an example with a simple workaround:\r\n\r\n``` r\r\nlibrary(tidyverse)\r\nlibrary(lubridate)\r\nset.seed(1234)\r\nlast_month <- ymd(\"2020-12-01\") - 29:0\r\n\r\ndf <- data.frame(\r\n  date = last_month,\r\n  price = runif(30)\r\n)\r\nmax_y = max(df$price)\r\nmax_x = df$date[df$price==max(df$price)][1]\r\n\r\nbase <- ggplot(df, aes(date, price)) +\r\n  geom_line(color=\"red\")\r\n\r\nbase+\r\n  geom_segment(aes(x=max_x, xend=max_x, y=-Inf, yend=max_y)) +\r\n  geom_segment(aes(x=-Inf, xend=max_x, y=max_y, yend=max_y))\r\n#> Error: Invalid input: date_trans works with objects of class Date only\r\n\r\nbase+\r\n  scale_x_continuous(breaks=ymd(\"2020-11-01\", \"2020-11-10\", \"2020-11-20\", \"2020-12-01\")) +\r\n  geom_segment(aes(x=max_x, xend=max_x, y=-Inf, yend=max_y)) +\r\n  geom_segment(aes(x=-Inf, xend=max_x, y=max_y, yend=max_y))\r\n```\r\n\r\n![](https://i.imgur.com/EtALmmp.png)\r\n\r\n<sup>Created on 2021-01-05 by the [reprex package](https://reprex.tidyverse.org) (v0.3.0)</sup>\r\n\r\n\r\nAs you can see, adding a `scale_x_continuous()` call solves this issue without breaking the date labels so maybe this error is not mandatory.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4305",
    "repository_url": "https://api.github.com/repos/tidyverse/ggplot2",
    "labels_url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4305/labels{/name}",
    "comments_url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4305/comments",
    "events_url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4305/events",
    "html_url": "https://github.com/tidyverse/ggplot2/issues/4305",
    "id": 776033141,
    "node_id": "MDU6SXNzdWU3NzYwMzMxNDE=",
    "number": 4305,
    "title": "Points don't inherit font family",
    "user": {
      "login": "botanize",
      "id": 6433981,
      "node_id": "MDQ6VXNlcjY0MzM5ODE=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/6433981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/botanize",
      "html_url": "https://github.com/botanize",
      "followers_url": "https://api.github.com/users/botanize/followers",
      "following_url": "https://api.github.com/users/botanize/following{/other_user}",
      "gists_url": "https://api.github.com/users/botanize/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/botanize/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/botanize/subscriptions",
      "organizations_url": "https://api.github.com/users/botanize/orgs",
      "repos_url": "https://api.github.com/users/botanize/repos",
      "events_url": "https://api.github.com/users/botanize/events{/privacy}",
      "received_events_url": "https://api.github.com/users/botanize/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2020-12-29T18:35:59Z",
    "updated_at": "2020-12-29T18:35:59Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "I expect that the font-family specified in the theme is applied to all applicable graphical content. However, when specifying some unicode characters for the shape scale I get empty boxes instead of the characters. Point geometries can use arbitrary characters for the shape scale, but not all characters are available in all font families. While constructing the points grob, `GeomPoint` omits the `fontfamily` `gpar` parameter, which means that there is no way to specify a font family that contains the desired characters. The standard ways of specifying a font family for the quartz device don't work for the gpar fontfamily (`quartz(family =`, or  `quartzFonts(sans = quartzFont(…`).\r\n\r\n``` r\r\nlibrary(ggplot2)\r\nlibrary(grid)\r\n\r\ntheme_set(theme_minimal(base_family = 'Apple SD Gothic Neo'))\r\n\r\np = ggplot(data.frame(x = 1:3, y = 1:3, shape = factor(0:2)), aes(x, y)) + geom_point(aes(shape = shape), size = 4) + scale_shape_manual(values = c('0' = '\\u2013', '1' = '◀', '2' = '\\u25B6')) + theme(text = element_text(family = 'Apple SD Gothic Neo'))\r\nprint(p)\r\ndata = ggplot_build(p)\r\ngtable = ggplot_gtable(data)\r\ngrid.draw(gtable)\r\n```\r\n\r\n![](https://i.imgur.com/lv0ezb5.png)\r\n\r\n``` r\r\n# add family to gpar for points grob\r\ngtable$grobs[[6]]$children[[3]]$gp$fontfamily = 'Apple SD Gothic Neo'\r\ngrid.newpage()\r\ngrid.draw(gtable)\r\n```\r\n\r\n![](https://i.imgur.com/O63iuIq.png)\r\n\r\n<sup>Created on 2020-12-29 by the [reprex package](https://reprex.tidyverse.org) (v0.3.0)</sup>\r\n\r\n\r\nI get the behavior I want by adding the font family `gpar` parameter to the correct grobs as above or to the gtable itself:\r\n```r\r\ndata = ggplot_build(p)\r\ngtable = ggplot_gtable(data)\r\ngtable$gp = gpar(fontfamily = 'Apple SD Gothic Neo')\r\ngrid.draw(gtable)\r\n```\r\n\r\nFrom a user perspective, I think this could be fixed by either adding a family parameter to `scale_shape` or inheriting the family from the theme or device.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4299",
    "repository_url": "https://api.github.com/repos/tidyverse/ggplot2",
    "labels_url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4299/labels{/name}",
    "comments_url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4299/comments",
    "events_url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4299/events",
    "html_url": "https://github.com/tidyverse/ggplot2/pull/4299",
    "id": 769768772,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NTQxNzMxODQ5",
    "number": 4299,
    "title": "Add missing US spellings for “scale_grey”",
    "user": {
      "login": "klmr",
      "id": 38931,
      "node_id": "MDQ6VXNlcjM4OTMx",
      "avatar_url": "https://avatars3.githubusercontent.com/u/38931?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/klmr",
      "html_url": "https://github.com/klmr",
      "followers_url": "https://api.github.com/users/klmr/followers",
      "following_url": "https://api.github.com/users/klmr/following{/other_user}",
      "gists_url": "https://api.github.com/users/klmr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/klmr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/klmr/subscriptions",
      "organizations_url": "https://api.github.com/users/klmr/orgs",
      "repos_url": "https://api.github.com/users/klmr/repos",
      "events_url": "https://api.github.com/users/klmr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/klmr/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2020-12-17T09:34:49Z",
    "updated_at": "2020-12-17T09:34:49Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "pull_request": {
      "url": "https://api.github.com/repos/tidyverse/ggplot2/pulls/4299",
      "html_url": "https://github.com/tidyverse/ggplot2/pull/4299",
      "diff_url": "https://github.com/tidyverse/ggplot2/pull/4299.diff",
      "patch_url": "https://github.com/tidyverse/ggplot2/pull/4299.patch"
    },
    "body": "As per #1901: [“gray” is the predominant US spelling](https://www.merriam-webster.com/dictionary/gray). The purpose of this PR is to increase discoverability for en-US speakers as well as non-native English speakers whose first exposure is to US English spelling rather than UK/AU/NZ.\r\n\r\nThis PR keeps the existing, less common spelling `scale_color_grey` for backwards compatibility.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4297",
    "repository_url": "https://api.github.com/repos/tidyverse/ggplot2",
    "labels_url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4297/labels{/name}",
    "comments_url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4297/comments",
    "events_url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4297/events",
    "html_url": "https://github.com/tidyverse/ggplot2/issues/4297",
    "id": 767818814,
    "node_id": "MDU6SXNzdWU3Njc4MTg4MTQ=",
    "number": 4297,
    "title": "tag position inside plot borders",
    "user": {
      "login": "Aariq",
      "id": 25404783,
      "node_id": "MDQ6VXNlcjI1NDA0Nzgz",
      "avatar_url": "https://avatars2.githubusercontent.com/u/25404783?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Aariq",
      "html_url": "https://github.com/Aariq",
      "followers_url": "https://api.github.com/users/Aariq/followers",
      "following_url": "https://api.github.com/users/Aariq/following{/other_user}",
      "gists_url": "https://api.github.com/users/Aariq/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Aariq/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Aariq/subscriptions",
      "organizations_url": "https://api.github.com/users/Aariq/orgs",
      "repos_url": "https://api.github.com/users/Aariq/repos",
      "events_url": "https://api.github.com/users/Aariq/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Aariq/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2020-12-15T16:55:17Z",
    "updated_at": "2021-01-12T21:39:16Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Some peer-reviewed journals (e.g. Oecologia) require figure panel labels to be _inside_ of plot borders (although they seem to enforce these requirements inconsistently).  It would be nice if there were an option like `theme(plot.tag.position = \"topleftinner\")` to place a label at the upper left corner of the inside of plot borders.  Currently, I think I have to kludge this by tweaking `theme(plot.tag = element_text(vjust = , hjust = )`, but it's inconsistent, so I have to do this tweaking for every panel individually.  Maybe there's an easier way that I don't know about?\r\n\r\nRelated to: https://github.com/thomasp85/patchwork/issues/222\r\n\r\n``` r\r\nlibrary(ggplot2)\r\np1 <- ggplot(mtcars) + geom_point(aes(mpg, disp)) + labs(tag = \"a)\")\r\np1 + theme(plot.tag.position = c(0,1),\r\n           plot.tag = element_text(vjust = 1.5, hjust = -2.85))\r\n```\r\n\r\n![](https://i.imgur.com/qWKrEqC.png)\r\n\r\n``` r\r\n# left of \"a\" just touching plot border\r\n\r\np3 <- ggplot(mtcars) + geom_smooth(aes(disp, qsec)) + labs(tag = \"b)\")\r\np3 + theme(plot.tag.position = c(0,1),\r\n           plot.tag = element_text(vjust = 1.5, hjust = -2.85))\r\n#> `geom_smooth()` using method = 'loess' and formula 'y ~ x'\r\n```\r\n\r\n![](https://i.imgur.com/jZHfEyH.png)\r\n\r\n``` r\r\n# \"b)\" is slightly further in with same theme()\r\n```\r\n\r\n<sup>Created on 2020-12-15 by the [reprex package](https://reprex.tidyverse.org) (v0.3.0)</sup>\r\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4296",
    "repository_url": "https://api.github.com/repos/tidyverse/ggplot2",
    "labels_url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4296/labels{/name}",
    "comments_url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4296/comments",
    "events_url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4296/events",
    "html_url": "https://github.com/tidyverse/ggplot2/issues/4296",
    "id": 766112299,
    "node_id": "MDU6SXNzdWU3NjYxMTIyOTk=",
    "number": 4296,
    "title": "Patch release of ggplot2",
    "user": {
      "login": "thomasp85",
      "id": 1775316,
      "node_id": "MDQ6VXNlcjE3NzUzMTY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1775316?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/thomasp85",
      "html_url": "https://github.com/thomasp85",
      "followers_url": "https://api.github.com/users/thomasp85/followers",
      "following_url": "https://api.github.com/users/thomasp85/following{/other_user}",
      "gists_url": "https://api.github.com/users/thomasp85/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/thomasp85/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/thomasp85/subscriptions",
      "organizations_url": "https://api.github.com/users/thomasp85/orgs",
      "repos_url": "https://api.github.com/users/thomasp85/repos",
      "events_url": "https://api.github.com/users/thomasp85/events{/privacy}",
      "received_events_url": "https://api.github.com/users/thomasp85/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 525888326,
        "node_id": "MDU6TGFiZWw1MjU4ODgzMjY=",
        "url": "https://api.github.com/repos/tidyverse/ggplot2/labels/internals%20:mag_right:",
        "name": "internals :mag_right:",
        "color": "eeeeee",
        "default": false,
        "description": ""
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": {
      "url": "https://api.github.com/repos/tidyverse/ggplot2/milestones/21",
      "html_url": "https://github.com/tidyverse/ggplot2/milestone/21",
      "labels_url": "https://api.github.com/repos/tidyverse/ggplot2/milestones/21/labels",
      "id": 6209455,
      "node_id": "MDk6TWlsZXN0b25lNjIwOTQ1NQ==",
      "number": 21,
      "title": "ggplot2 3.3.3",
      "description": null,
      "creator": {
        "login": "thomasp85",
        "id": 1775316,
        "node_id": "MDQ6VXNlcjE3NzUzMTY=",
        "avatar_url": "https://avatars3.githubusercontent.com/u/1775316?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/thomasp85",
        "html_url": "https://github.com/thomasp85",
        "followers_url": "https://api.github.com/users/thomasp85/followers",
        "following_url": "https://api.github.com/users/thomasp85/following{/other_user}",
        "gists_url": "https://api.github.com/users/thomasp85/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/thomasp85/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/thomasp85/subscriptions",
        "organizations_url": "https://api.github.com/users/thomasp85/orgs",
        "repos_url": "https://api.github.com/users/thomasp85/repos",
        "events_url": "https://api.github.com/users/thomasp85/events{/privacy}",
        "received_events_url": "https://api.github.com/users/thomasp85/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 1,
      "closed_issues": 2,
      "state": "open",
      "created_at": "2020-12-14T08:25:25Z",
      "updated_at": "2021-01-08T14:38:38Z",
      "due_on": null,
      "closed_at": null
    },
    "comments": 6,
    "created_at": "2020-12-14T08:25:33Z",
    "updated_at": "2021-01-08T14:44:12Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "@Hadley @clauswilke @yutannihilation @karawoo @paleolimbot \r\n\r\nA slew of changes in R-devel/macOS has resulted in CRAN requesting a ggplot2 update (one of which is #4293). These updates are rather simple and superficial and the plan is to make a patch release off of the last release branch rather than go through the tedious process of a full release. I'll handle this and the master branch is still open for merging etc.\r\n\r\nThe patch release will be merged into master once on cran",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4292",
    "repository_url": "https://api.github.com/repos/tidyverse/ggplot2",
    "labels_url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4292/labels{/name}",
    "comments_url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4292/comments",
    "events_url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4292/events",
    "html_url": "https://github.com/tidyverse/ggplot2/issues/4292",
    "id": 760145120,
    "node_id": "MDU6SXNzdWU3NjAxNDUxMjA=",
    "number": 4292,
    "title": "Issue with facet scale=\"free\" when want to apply it on density plot.",
    "user": {
      "login": "pritom65",
      "id": 66182790,
      "node_id": "MDQ6VXNlcjY2MTgyNzkw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/66182790?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pritom65",
      "html_url": "https://github.com/pritom65",
      "followers_url": "https://api.github.com/users/pritom65/followers",
      "following_url": "https://api.github.com/users/pritom65/following{/other_user}",
      "gists_url": "https://api.github.com/users/pritom65/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pritom65/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pritom65/subscriptions",
      "organizations_url": "https://api.github.com/users/pritom65/orgs",
      "repos_url": "https://api.github.com/users/pritom65/repos",
      "events_url": "https://api.github.com/users/pritom65/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pritom65/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2020-12-09T09:06:55Z",
    "updated_at": "2020-12-20T07:14:02Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Brief description of the problem\r\n\r\n``` r\r\nlibrary(tidyverse)\r\nlibrary(tidymodels)\r\n#> ─ Attaching packages ─────────────────── tidymodels 0.1.2 ─\r\n#> ✓ broom     0.7.3      ✓ recipes   0.1.15\r\n#> ✓ dials     0.0.9      ✓ rsample   0.0.8 \r\n#> ✓ infer     0.5.3      ✓ tune      0.1.2 \r\n#> ✓ modeldata 0.1.0      ✓ workflows 0.2.1 \r\n#> ✓ parsnip   0.1.4      ✓ yardstick 0.0.7\r\n#> ─ Conflicts ───────────────────── tidymodels_conflicts() ─\r\n#> x scales::discard() masks purrr::discard()\r\n#> x dplyr::filter()   masks stats::filter()\r\n#> x recipes::fixed()  masks stringr::fixed()\r\n#> x dplyr::lag()      masks stats::lag()\r\n#> x yardstick::spec() masks readr::spec()\r\n#> x recipes::step()   masks stats::step()\r\n\r\n## creating data\r\ndata <- tibble(id = 1:100) %>%\r\n  mutate(\r\n    sample = list(rnorm(100)),\r\n    test = map(sample, t.test),\r\n    test = map(test,tidy)\r\n  ) %>% \r\n  unnest(test) %>%\r\n  select(estimate, statistic, p.value, conf.low, conf.high) %>%\r\n  pivot_longer(cols=everything(),names_to = \"types\",values_to=\"data\")\r\n\r\n## this is not working\r\ndata %>% \r\n  filter(types %in% c(\"estimate\",\"p.value\")) %>% \r\n  ggplot(aes(data,fill=types)) +\r\n  geom_density(alpha = .7) +\r\n  facet_wrap( ~ types,ncol = 2,scales = \"free\")\r\n```\r\n\r\n![](https://i.imgur.com/IgiM0pH.png)\r\n\r\n``` r\r\n## this is working but I want the result with scale set to \"free\"\r\ndata %>% \r\n  filter(types %in% c(\"estimate\",\"p.value\")) %>% \r\n  ggplot(aes(data,fill=types)) +\r\n  geom_density(alpha = .7) +\r\n  facet_wrap( ~ types,ncol = 2,scales = \"fixed\")\r\n```\r\n\r\n![](https://i.imgur.com/OlObZLz.png)\r\n\r\n<sup>Created on 2020-12-20 by the [reprex package](https://reprex.tidyverse.org) (v0.3.0)</sup>",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4289",
    "repository_url": "https://api.github.com/repos/tidyverse/ggplot2",
    "labels_url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4289/labels{/name}",
    "comments_url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4289/comments",
    "events_url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4289/events",
    "html_url": "https://github.com/tidyverse/ggplot2/issues/4289",
    "id": 759287170,
    "node_id": "MDU6SXNzdWU3NTkyODcxNzA=",
    "number": 4289,
    "title": "dup_axis guide parameters don't apply to the right axis with coord_flip",
    "user": {
      "login": "Nenuial",
      "id": 380861,
      "node_id": "MDQ6VXNlcjM4MDg2MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/380861?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Nenuial",
      "html_url": "https://github.com/Nenuial",
      "followers_url": "https://api.github.com/users/Nenuial/followers",
      "following_url": "https://api.github.com/users/Nenuial/following{/other_user}",
      "gists_url": "https://api.github.com/users/Nenuial/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Nenuial/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Nenuial/subscriptions",
      "organizations_url": "https://api.github.com/users/Nenuial/orgs",
      "repos_url": "https://api.github.com/users/Nenuial/repos",
      "events_url": "https://api.github.com/users/Nenuial/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Nenuial/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2020-12-08T09:38:38Z",
    "updated_at": "2020-12-08T09:38:38Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "If you use `dup_axis()` to duplicate an axis and don't want to repeat the title of the axis, then flip the coordinates with `coord_flip` you have the \"new\" x axis title that disappears and not the y axis one (as expected). If you change the guide argument to something like `angle = 45` then it correctly applies to the duplicated axis.\r\n\r\nSorry if the problem is not explained very well, here is a reprex demonstrating it.\r\n\r\n``` r\r\nlibrary(ggplot2)\r\n\r\nmtcars %>% \r\n  ggplot(aes(x = mpg, y = cyl)) +\r\n  geom_point() +\r\n  scale_x_continuous(sec.axis = dup_axis(guide = guide_axis(title = NULL))) +\r\n  coord_flip()\r\n```\r\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4288",
    "repository_url": "https://api.github.com/repos/tidyverse/ggplot2",
    "labels_url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4288/labels{/name}",
    "comments_url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4288/comments",
    "events_url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4288/events",
    "html_url": "https://github.com/tidyverse/ggplot2/issues/4288",
    "id": 758727796,
    "node_id": "MDU6SXNzdWU3NTg3Mjc3OTY=",
    "number": 4288,
    "title": "Plots not showing until Quartz window is resized",
    "user": {
      "login": "benjaminmoon",
      "id": 1419491,
      "node_id": "MDQ6VXNlcjE0MTk0OTE=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1419491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/benjaminmoon",
      "html_url": "https://github.com/benjaminmoon",
      "followers_url": "https://api.github.com/users/benjaminmoon/followers",
      "following_url": "https://api.github.com/users/benjaminmoon/following{/other_user}",
      "gists_url": "https://api.github.com/users/benjaminmoon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/benjaminmoon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/benjaminmoon/subscriptions",
      "organizations_url": "https://api.github.com/users/benjaminmoon/orgs",
      "repos_url": "https://api.github.com/users/benjaminmoon/repos",
      "events_url": "https://api.github.com/users/benjaminmoon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/benjaminmoon/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-12-07T18:07:09Z",
    "updated_at": "2021-01-07T22:46:22Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I've recently done some work with ggplot2, having mostly used base-R plots for the last few months and have the following issue when plotting in Quartz using the command and and R.app:\r\n\r\n* Plotting base-R plots works correctly and appears in the Quartz window, even doing multiple plotting commands\r\n* Plotting with ggplot2 does not show the plot until I use my mouse to resize the Quartz window. The window will then refresh and the plot will show correctly.\r\n\r\nCan you help me resolve why the Quartz window is not showing plots from ggplot?\r\n\r\nAn example of simple code I'm using in a fresh R session:\r\n\r\n```r\r\nplot(1:10) # will plot correctly in Quartz window\r\n\r\nlibrary(ggplot2)\r\ndata <- data.frame(x = rnorm(10), y = rexp(10))\r\nggplot(data, aes(x = x, y = y)) +\r\n  geom_point()\r\n# This second plot will not render until I resize the Quartz window\r\n\r\nggsave(\"test.pdf\")\r\n# The pdf file is created correctly, even if still not displayed in Quartz window\r\n\r\nplot(10:1) # will display correctly in Quartz window \r\n```\r\n\r\nI include a GIF to show this.\r\n\r\n![r_ggplot_issue](https://user-images.githubusercontent.com/1419491/101387787-ddb8a100-38b6-11eb-83b1-0362c2581438.gif)\r\n\r\nIf, however, I run the above ggplot commands *only* as the first thing in a clean session I get the following error:\r\n\r\n```r\r\nError in UseMethod(\"depth\") : \r\n  no applicable method for 'depth' applied to an object of class \"NULL\"\r\n```\r\n\r\nAnd no plot is shown.\r\n\r\n------\r\n\r\nThe output of my `sessionInfo()` is:\r\n\r\n```r\r\nR version 4.0.3 (2020-10-10)\r\nPlatform: x86_64-apple-darwin17.0 (64-bit)\r\nRunning under: macOS Big Sur 10.16\r\n\r\nMatrix products: default\r\nBLAS:   /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRblas.dylib\r\nLAPACK: /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRlapack.dylib\r\n\r\nlocale:\r\n[1] en_GB.UTF-8/en_GB.UTF-8/en_GB.UTF-8/C/en_GB.UTF-8/en_GB.UTF-8\r\n\r\nattached base packages:\r\n[1] stats     graphics  grDevices utils     datasets  methods   base     \r\n\r\nother attached packages:\r\n[1] ggplot2_3.3.2\r\n\r\nloaded via a namespace (and not attached):\r\n [1] digest_0.6.27    withr_2.3.0      dplyr_1.0.2      crayon_1.3.4     grid_4.0.3      \r\n [6] R6_2.5.0         lifecycle_0.2.0  gtable_0.3.0     magrittr_2.0.1   scales_1.1.1    \r\n[11] pillar_1.4.7     rlang_0.4.9      farver_2.0.3     generics_0.1.0   vctrs_0.3.5     \r\n[16] ellipsis_0.3.1   labeling_0.4.2   tools_4.0.3      glue_1.4.2       purrr_0.3.4     \r\n[21] munsell_0.5.0    compiler_4.0.3   pkgconfig_2.0.3  colorspace_2.0-0 tidyselect_1.1.0\r\n[26] tibble_3.0.4   \r\n```\r\n\r\nI am running R version 4.0.3 on macOS Big Sur 11.0.1 (=10.16).",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4287",
    "repository_url": "https://api.github.com/repos/tidyverse/ggplot2",
    "labels_url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4287/labels{/name}",
    "comments_url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4287/comments",
    "events_url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4287/events",
    "html_url": "https://github.com/tidyverse/ggplot2/pull/4287",
    "id": 758655713,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NTMzNzkzMTc5",
    "number": 4287,
    "title": "Adds order to guide hash",
    "user": {
      "login": "eliocamp",
      "id": 8617595,
      "node_id": "MDQ6VXNlcjg2MTc1OTU=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8617595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/eliocamp",
      "html_url": "https://github.com/eliocamp",
      "followers_url": "https://api.github.com/users/eliocamp/followers",
      "following_url": "https://api.github.com/users/eliocamp/following{/other_user}",
      "gists_url": "https://api.github.com/users/eliocamp/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/eliocamp/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/eliocamp/subscriptions",
      "organizations_url": "https://api.github.com/users/eliocamp/orgs",
      "repos_url": "https://api.github.com/users/eliocamp/repos",
      "events_url": "https://api.github.com/users/eliocamp/events{/privacy}",
      "received_events_url": "https://api.github.com/users/eliocamp/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2020-12-07T16:25:03Z",
    "updated_at": "2020-12-07T16:30:13Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "pull_request": {
      "url": "https://api.github.com/repos/tidyverse/ggplot2/pulls/4287",
      "html_url": "https://github.com/tidyverse/ggplot2/pull/4287",
      "diff_url": "https://github.com/tidyverse/ggplot2/pull/4287.diff",
      "patch_url": "https://github.com/tidyverse/ggplot2/pull/4287.patch"
    },
    "body": "This is a way to control which guides can be merged together. \r\n\r\nCloses #4280 ",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4286",
    "repository_url": "https://api.github.com/repos/tidyverse/ggplot2",
    "labels_url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4286/labels{/name}",
    "comments_url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4286/comments",
    "events_url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4286/events",
    "html_url": "https://github.com/tidyverse/ggplot2/pull/4286",
    "id": 758471753,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NTMzNjM5NjYx",
    "number": 4286,
    "title": "Expose position arg on geom_hline() and geom_vline()",
    "user": {
      "login": "yutannihilation",
      "id": 1978793,
      "node_id": "MDQ6VXNlcjE5Nzg3OTM=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1978793?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yutannihilation",
      "html_url": "https://github.com/yutannihilation",
      "followers_url": "https://api.github.com/users/yutannihilation/followers",
      "following_url": "https://api.github.com/users/yutannihilation/following{/other_user}",
      "gists_url": "https://api.github.com/users/yutannihilation/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yutannihilation/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yutannihilation/subscriptions",
      "organizations_url": "https://api.github.com/users/yutannihilation/orgs",
      "repos_url": "https://api.github.com/users/yutannihilation/repos",
      "events_url": "https://api.github.com/users/yutannihilation/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yutannihilation/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2020-12-07T12:37:34Z",
    "updated_at": "2020-12-07T12:44:21Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "pull_request": {
      "url": "https://api.github.com/repos/tidyverse/ggplot2/pulls/4286",
      "html_url": "https://github.com/tidyverse/ggplot2/pull/4286",
      "diff_url": "https://github.com/tidyverse/ggplot2/pull/4286.diff",
      "patch_url": "https://github.com/tidyverse/ggplot2/pull/4286.patch"
    },
    "body": "Fix #4285",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4285",
    "repository_url": "https://api.github.com/repos/tidyverse/ggplot2",
    "labels_url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4285/labels{/name}",
    "comments_url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4285/comments",
    "events_url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4285/events",
    "html_url": "https://github.com/tidyverse/ggplot2/issues/4285",
    "id": 757408283,
    "node_id": "MDU6SXNzdWU3NTc0MDgyODM=",
    "number": 4285,
    "title": "Feature request:  Add position argument to geom_vline and geom_hline",
    "user": {
      "login": "billdenney",
      "id": 10359931,
      "node_id": "MDQ6VXNlcjEwMzU5OTMx",
      "avatar_url": "https://avatars1.githubusercontent.com/u/10359931?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/billdenney",
      "html_url": "https://github.com/billdenney",
      "followers_url": "https://api.github.com/users/billdenney/followers",
      "following_url": "https://api.github.com/users/billdenney/following{/other_user}",
      "gists_url": "https://api.github.com/users/billdenney/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/billdenney/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/billdenney/subscriptions",
      "organizations_url": "https://api.github.com/users/billdenney/orgs",
      "repos_url": "https://api.github.com/users/billdenney/repos",
      "events_url": "https://api.github.com/users/billdenney/events{/privacy}",
      "received_events_url": "https://api.github.com/users/billdenney/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 12,
    "created_at": "2020-12-04T21:11:13Z",
    "updated_at": "2020-12-07T08:18:02Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "When working with a discrete scale, I'd like to be able to nudge a vline a bit.  But, `geom_vline()` doesn't use the position argument that I would have expected.  It would be helpful to add a `position` argument to `geom_vline()` and `geom_hline()` to allow nudging the position.\r\n\r\nIn this example, I'd like to have the red vertical line go between the `\"1\"` and `\"2\"` on the horizontal axis.\r\n\r\n``` r\r\nlibrary(ggplot2)\r\nmydata <-\r\n  data.frame(\r\n    x=factor(c(\"1\", \"2\")),\r\n    y=3:4\r\n  )\r\nggplot(mydata, aes(x=x, y=y)) +\r\n  geom_point() +\r\n  geom_vline(xintercept=\"2\", colour=\"red\")\r\n```\r\n\r\n![](https://i.imgur.com/1LUldyf.png)\r\n\r\n``` r\r\nggplot(mydata, aes(x=x, y=y)) +\r\n  geom_point() +\r\n  geom_vline(xintercept=\"2\", colour=\"red\", position=position_nudge(x=-0.5))\r\n#> Warning: Ignoring unknown parameters: position\r\n```\r\n\r\n![](https://i.imgur.com/m3ks9BN.png)\r\n\r\n<sup>Created on 2020-12-04 by the [reprex package](https://reprex.tidyverse.org) (v0.3.0)</sup>\r\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4284",
    "repository_url": "https://api.github.com/repos/tidyverse/ggplot2",
    "labels_url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4284/labels{/name}",
    "comments_url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4284/comments",
    "events_url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4284/events",
    "html_url": "https://github.com/tidyverse/ggplot2/issues/4284",
    "id": 757180661,
    "node_id": "MDU6SXNzdWU3NTcxODA2NjE=",
    "number": 4284,
    "title": "remove_missings(..., finite = TRUE) removes everything if there is a character column",
    "user": {
      "login": "jarauh",
      "id": 24244435,
      "node_id": "MDQ6VXNlcjI0MjQ0NDM1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/24244435?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jarauh",
      "html_url": "https://github.com/jarauh",
      "followers_url": "https://api.github.com/users/jarauh/followers",
      "following_url": "https://api.github.com/users/jarauh/following{/other_user}",
      "gists_url": "https://api.github.com/users/jarauh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jarauh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jarauh/subscriptions",
      "organizations_url": "https://api.github.com/users/jarauh/orgs",
      "repos_url": "https://api.github.com/users/jarauh/repos",
      "events_url": "https://api.github.com/users/jarauh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jarauh/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-12-04T15:19:11Z",
    "updated_at": "2020-12-04T16:18:25Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "In base-R, character values are not \"finite\" (i.e. `is.finite(\"a\")` is `FALSE`).  Therefore, if `remove_missings()` with `finite = TRUE` encounters a character column, it throws away everything. Thus, the first of the following two lines raises a warning and returns an empty data.frame, while the second line preserves the input data.frame:\r\n```r\r\nremove_missing(data.frame(foo = \"bar\", stringsAsFactors = FALSE), finite = TRUE)\r\nremove_missing(data.frame(foo = \"bar\", stringsAsFactors = TRUE), finite = TRUE)\r\n```\r\n\r\nFor me, this led to the following problem that I found extremely difficult to debug: I had a custom `stat` with `required_aes = c(\"x\", \"colour\")`.  If the colour-aesthetic was mapped to a factor column, everything worked as expected - non-NA-values of factor variables are finite.  If the colour-aesthetic was mapped to a character column, the layer was dropped.\r\n\r\nMinimal example:\r\n```r\r\nStatXMean <- ggplot2::ggproto(\r\n  \"StatXMean\", Stat,\r\n  compute_group = function(data, scales, params, na.rm = FALSE) {\r\n    dplyr::summarize(dplyr::group_by(data, colour),\r\n                     xintercept = mean(x, na.rm = TRUE))\r\n  },  required_aes = c(\"x\", \"colour\")\r\n)\r\n\r\nstat_x_mean <- function(mapping = NULL, data = NULL, geom = \"vline\",\r\n                        position = \"identity\", na.rm = FALSE, show.legend = NA,\r\n                        inherit.aes = TRUE, ...) {\r\n  ggplot2::layer(\r\n    stat = StatXMean, data = data, mapping = mapping, geom = geom,\r\n    position = position, show.legend = show.legend, inherit.aes = inherit.aes,\r\n    params = list(na.rm = na.rm, ...),\r\n  )\r\n}\r\n\r\nggplot(mpg, aes(displ, hwy, colour = drv)) +\r\n  geom_point() + stat_x_mean()\r\n\r\nggplot(mpg, aes(displ, hwy, colour = as.factor(drv))) +\r\n  geom_point() + stat_x_mean()\r\n```\r\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4281",
    "repository_url": "https://api.github.com/repos/tidyverse/ggplot2",
    "labels_url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4281/labels{/name}",
    "comments_url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4281/comments",
    "events_url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4281/events",
    "html_url": "https://github.com/tidyverse/ggplot2/issues/4281",
    "id": 754811448,
    "node_id": "MDU6SXNzdWU3NTQ4MTE0NDg=",
    "number": 4281,
    "title": "Relicensing ggplot2 (wrap up)",
    "user": {
      "login": "hadley",
      "id": 4196,
      "node_id": "MDQ6VXNlcjQxOTY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/4196?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hadley",
      "html_url": "https://github.com/hadley",
      "followers_url": "https://api.github.com/users/hadley/followers",
      "following_url": "https://api.github.com/users/hadley/following{/other_user}",
      "gists_url": "https://api.github.com/users/hadley/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hadley/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hadley/subscriptions",
      "organizations_url": "https://api.github.com/users/hadley/orgs",
      "repos_url": "https://api.github.com/users/hadley/repos",
      "events_url": "https://api.github.com/users/hadley/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hadley/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 15,
    "created_at": "2020-12-01T23:44:42Z",
    "updated_at": "2020-12-14T16:35:32Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "We are systematically re-licensing tidyverse and r-lib packages to use the MIT license, to make our package licenses as clear and permissive as possible. To do so, we need the approval of all copyright holders, which I have found by reviewing contributions from all all non-RStudio [contributors](https://github.com/tidyverse/ggplot2/graphs/contributors). \r\n​\r\nDue to the maximum number of users who can be tagged in a post on GitHub, there were three issues (#4231, #4232, #4233) used to track re-licensing for ggplot2. This issue combines the remaining contributors who have not yet responded.\r\n\r\n@dkahle, @JoFrhwld, @jonathan-g, @kelseymoty, @lselzer, @noamross, @pkq, @slowkow, @sowla, @steveharoz,  @tdmcarthur, @thiyangt, would you permit us to re-license ggplot2 with the MIT license? If so, please comment \"I agree\" below.\r\n​\r\n* [x] [@dkahle](https://github.com/tidyverse/ggplot2/commits?author=dkahle)  \r\n* [x] [@JoFrhwld](https://github.com/tidyverse/ggplot2/commits?author=JoFrhwld)  \r\n* [x] [@jonathan-g](https://github.com/tidyverse/ggplot2/commits?author=jonathan-g)  \r\n* [x] [@kelseymoty](https://github.com/tidyverse/ggplot2/commits?author=kelseymoty)  \r\n* [x] [@lselzer](https://github.com/tidyverse/ggplot2/commits?author=lselzer)  \r\n* [x] [@noamross](https://github.com/tidyverse/ggplot2/commits?author=noamross)  \r\n* [x] [@pkq](https://github.com/tidyverse/ggplot2/commits?author=pkq)  \r\n* [x] [@slowkow](https://github.com/tidyverse/ggplot2/commits?author=slowkow)  \r\n* [x] [@sowla](https://github.com/tidyverse/ggplot2/commits?author=sowla)  \r\n* [x] [@steveharoz](https://github.com/tidyverse/ggplot2/commits?author=steveharoz)  \r\n* [ ] [@tdmcarthur](https://github.com/tidyverse/ggplot2/commits?author=tdmcarthur)  \r\n* [x] [@thiyangt](https://github.com/tidyverse/ggplot2/commits?author=thiyangt)\r\n* [x] [@mdlama](https://github.com/tidyverse/ggplot2/commits?author=mdlama)\r\n* [x] [@llrs](https://github.com/tidyverse/ggplot2/commits?author=llrs)\r\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4280",
    "repository_url": "https://api.github.com/repos/tidyverse/ggplot2",
    "labels_url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4280/labels{/name}",
    "comments_url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4280/comments",
    "events_url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4280/events",
    "html_url": "https://github.com/tidyverse/ggplot2/issues/4280",
    "id": 754736352,
    "node_id": "MDU6SXNzdWU3NTQ3MzYzNTI=",
    "number": 4280,
    "title": "Hash for guide_train should take colours into account",
    "user": {
      "login": "eliocamp",
      "id": 8617595,
      "node_id": "MDQ6VXNlcjg2MTc1OTU=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8617595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/eliocamp",
      "html_url": "https://github.com/eliocamp",
      "followers_url": "https://api.github.com/users/eliocamp/followers",
      "following_url": "https://api.github.com/users/eliocamp/following{/other_user}",
      "gists_url": "https://api.github.com/users/eliocamp/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/eliocamp/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/eliocamp/subscriptions",
      "organizations_url": "https://api.github.com/users/eliocamp/orgs",
      "repos_url": "https://api.github.com/users/eliocamp/repos",
      "events_url": "https://api.github.com/users/eliocamp/events{/privacy}",
      "received_events_url": "https://api.github.com/users/eliocamp/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 12,
    "created_at": "2020-12-01T21:22:56Z",
    "updated_at": "2020-12-07T15:31:46Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "When using [ggnewscale](https://github.com/eliocamp/ggnewscale), legends can disappear if they have the same title and breaks:\r\n\r\n``` r\r\nlibrary(ggplot2)\r\nlibrary(ggnewscale)\r\n\r\ndata <- expand.grid(y = 1:4, x = 1:4)\r\ndata$z <- c(\"a\", \"b\")\r\n\r\nggplot(data, aes(x, y)) +\r\n  geom_tile(data = ~.x[.x$x == 1, ], aes(fill = z)) +\r\n  scale_fill_brewer(palette = 1) +\r\n  new_scale_fill() +\r\n  geom_tile(data = ~.x[.x$x == 2, ], aes(fill = z)) +\r\n  scale_fill_brewer(palette = 2) \r\n```\r\n![](https://i.imgur.com/wcxTZER.png)\r\n\r\nWhat's going on is that ggplot2 is merging both guides because they have the same title and labels. Changing the name of each scale makes them distinct. \r\n\r\n``` r\r\nggplot(data, aes(x, y)) +\r\n  geom_tile(data = ~.x[.x$x == 1, ], aes(fill = z)) +\r\n  scale_fill_brewer(name = \"1\", palette = 1) +\r\n  new_scale_fill() +\r\n  geom_tile(data = ~.x[.x$x == 2, ], aes(fill = z)) +\r\n  scale_fill_brewer(name = \"2\", palette = 2) \r\n```\r\n\r\n![](https://i.imgur.com/tsXBUXq.png)\r\n\r\nThe problem is that `guide_train.legend` computes the hash using the title, labels, direction and name: \r\n\r\nhttps://github.com/tidyverse/ggplot2/blob/12e61dfcf9151c2094536294a8ef42ddffdca9ef/R/guide-legend.r#L229\r\n\r\nIn the first example, all of those characteristics are the same, and the guides are merged. Ideally, the hash should include information on the colours included in `key[[aes_column_name]]`\r\n\r\nThis small hack is a small proof of concept of how it would work:\r\n\r\n``` r\r\nmy_guide <- function(...) {\r\n  guide <- guide_legend(...)\r\n  class(guide) <- c(\"my_guide\", class(guide))\r\n  guide\r\n}\r\n\r\nguide_train.my_guide <- function (guide, scale, aesthetic = NULL) {\r\n  guide <- NextMethod(\"guide_train\")\r\n  \r\n  guide$hash <-  with(guide, \r\n                      digest::digest(list(title, \r\n                        key$.label, direction, name, key[, 1]  # should be `key[[aes_column_name]]`\r\n                                                 )))\r\n  guide\r\n}\r\n\r\nggplot(data, aes(x, y)) +\r\n  geom_tile(data = ~.x[.x$x == 1, ], aes(fill = z)) +\r\n  scale_fill_brewer(palette = 1, guide = my_guide()) +\r\n  new_scale_fill() +\r\n  geom_tile(data = ~.x[.x$x == 2, ], aes(fill = z)) +\r\n  scale_fill_brewer(palette = 2, guide = my_guide()) \r\n```\r\n\r\n![](https://i.imgur.com/amxCg2A.png)\r\n\r\n\r\n\r\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4277",
    "repository_url": "https://api.github.com/repos/tidyverse/ggplot2",
    "labels_url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4277/labels{/name}",
    "comments_url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4277/comments",
    "events_url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4277/events",
    "html_url": "https://github.com/tidyverse/ggplot2/pull/4277",
    "id": 753821131,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NTI5ODI1NDU0",
    "number": 4277,
    "title": "Allow scale_{colour/fill}_ordinal() to be configured via new ggplot2.ordinal.{colour/fill} global options. ",
    "user": {
      "login": "cpsievert",
      "id": 1365941,
      "node_id": "MDQ6VXNlcjEzNjU5NDE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1365941?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpsievert",
      "html_url": "https://github.com/cpsievert",
      "followers_url": "https://api.github.com/users/cpsievert/followers",
      "following_url": "https://api.github.com/users/cpsievert/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpsievert/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpsievert/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpsievert/subscriptions",
      "organizations_url": "https://api.github.com/users/cpsievert/orgs",
      "repos_url": "https://api.github.com/users/cpsievert/repos",
      "events_url": "https://api.github.com/users/cpsievert/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpsievert/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-11-30T21:35:35Z",
    "updated_at": "2020-12-02T02:33:55Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "pull_request": {
      "url": "https://api.github.com/repos/tidyverse/ggplot2/pulls/4277",
      "html_url": "https://github.com/tidyverse/ggplot2/pull/4277",
      "diff_url": "https://github.com/tidyverse/ggplot2/pull/4277.diff",
      "patch_url": "https://github.com/tidyverse/ggplot2/pull/4277.patch"
    },
    "body": "Closes #4148. \r\n\r\nCould be seen as a follow-up of sorts to #3833, which added the ability to configure qualitative (i.e., non-ordinal) colourscale defaults. This PR adds a similar ability to configure ordinal colourscale defaults via new `ggplot2.ordinal.{colour/fill}` options:\r\n\r\n```r\r\nlibrary(ggplot2)\r\n\r\np <- ggplot(diamonds, aes(price, colour = cut, fill = cut)) + geom_density()\r\np\r\n```\r\n\r\n![image](https://user-images.githubusercontent.com/1365941/100668437-87c98380-3321-11eb-89a5-65d16f6a0fe9.png)\r\n\r\n\r\n```r\r\nwithr::with_options(\r\n  list(ggplot2.ordinal.fill = viridisLite::cividis(10)), p\r\n)\r\n```\r\n\r\n![image](https://user-images.githubusercontent.com/1365941/100668406-7aac9480-3321-11eb-91c7-b1a42633ab1c.png)\r\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4276",
    "repository_url": "https://api.github.com/repos/tidyverse/ggplot2",
    "labels_url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4276/labels{/name}",
    "comments_url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4276/comments",
    "events_url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4276/events",
    "html_url": "https://github.com/tidyverse/ggplot2/issues/4276",
    "id": 752702428,
    "node_id": "MDU6SXNzdWU3NTI3MDI0Mjg=",
    "number": 4276,
    "title": "Feature request: better text placement with inward facing axis ticks",
    "user": {
      "login": "teunbrand",
      "id": 49372158,
      "node_id": "MDQ6VXNlcjQ5MzcyMTU4",
      "avatar_url": "https://avatars3.githubusercontent.com/u/49372158?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/teunbrand",
      "html_url": "https://github.com/teunbrand",
      "followers_url": "https://api.github.com/users/teunbrand/followers",
      "following_url": "https://api.github.com/users/teunbrand/following{/other_user}",
      "gists_url": "https://api.github.com/users/teunbrand/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/teunbrand/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/teunbrand/subscriptions",
      "organizations_url": "https://api.github.com/users/teunbrand/orgs",
      "repos_url": "https://api.github.com/users/teunbrand/repos",
      "events_url": "https://api.github.com/users/teunbrand/events{/privacy}",
      "received_events_url": "https://api.github.com/users/teunbrand/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2020-11-28T15:52:44Z",
    "updated_at": "2020-11-28T15:52:44Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "Hello there,\r\n\r\nCurrently you can set inward facing axis ticks by setting the `axis.ticks.length` to a negative unit. However, doing this naively causes the axis text to be placed awkwardly.\r\n\r\n``` r\r\nlibrary(ggplot2)\r\n\r\nggplot(mtcars, aes(wt, mpg)) +\r\n  geom_point() +\r\n  theme(axis.ticks.length = unit(-5, \"pt\"))\r\n```\r\n\r\n![](https://i.imgur.com/jdHgFe7.png)\r\n\r\nYou could fix this awkward text placement by giving the axis text wider margins, but takes extra effort in looking up what the current theme's axis text margins are and adding your own.\r\n\r\n``` r\r\n\r\nggplot(mtcars, aes(wt, mpg)) +\r\n  geom_point() +\r\n  theme(axis.ticks.length = unit(-5, \"pt\"),\r\n        axis.text.x = element_text(margin = margin(t = unit(7.2, \"pt\"))),\r\n        axis.text.y = element_text(margin = margin(r = unit(7.2, \"pt\"))))\r\n```\r\n\r\n![](https://i.imgur.com/NoCTrZA.png)\r\n\r\n<sup>Created on 2020-11-28 by the [reprex package](https://reprex.tidyverse.org) (v0.3.0)</sup>\r\n\r\nI haven't got unit arithmetic to work within the `margin()` function, so the conversion is more difficult if `axis.ticks.length` is defined in `\"cm\"` and the margins in `\"pt\"`. For example `margin(t = unit(1, \"mm\") + unit(1, \"pt\"))` throws an error, whereas `unit(1, \"mm\") + unit(1, \"pt\")` does not.\r\n\r\nThe piece of code responsible for measuring the sizes of axis elements is found here: https://github.com/tidyverse/ggplot2/blob/12e61dfcf9151c2094536294a8ef42ddffdca9ef/R/guides-axis.r#L283\r\n\r\nFrom a quick test, I got correct placement of the labels (as in the second plot) by replacing that line with the following:\r\n\r\n```\r\ngrob_dims <- unit.c(max(tick_length, unit(0, \"pt\")), label_dims)\r\n```\r\n\r\nI think I have heard it mentioned that the guide system at some point will be converted to the `ggproto` class, so this feature might be something to keep in mind when that update happens.\r\n\r\nThanks for reading!\r\n\r\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4275",
    "repository_url": "https://api.github.com/repos/tidyverse/ggplot2",
    "labels_url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4275/labels{/name}",
    "comments_url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4275/comments",
    "events_url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4275/events",
    "html_url": "https://github.com/tidyverse/ggplot2/issues/4275",
    "id": 751766526,
    "node_id": "MDU6SXNzdWU3NTE3NjY1MjY=",
    "number": 4275,
    "title": "geom_sf() draws incorrect aesthetics for GEOMETRYCOLLECTION",
    "user": {
      "login": "clauswilke",
      "id": 4210929,
      "node_id": "MDQ6VXNlcjQyMTA5Mjk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4210929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/clauswilke",
      "html_url": "https://github.com/clauswilke",
      "followers_url": "https://api.github.com/users/clauswilke/followers",
      "following_url": "https://api.github.com/users/clauswilke/following{/other_user}",
      "gists_url": "https://api.github.com/users/clauswilke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/clauswilke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/clauswilke/subscriptions",
      "organizations_url": "https://api.github.com/users/clauswilke/orgs",
      "repos_url": "https://api.github.com/users/clauswilke/repos",
      "events_url": "https://api.github.com/users/clauswilke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/clauswilke/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-11-26T18:12:51Z",
    "updated_at": "2020-12-06T07:47:52Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "I have noticed this problem in the context of converting invalid to valid geometries using `sf::st_make_valid()`. The invalid geometry is drawn correctly, the valid geometry is not.\r\n\r\nIn the reprex, I'm using the isoband package to create an invalid geometry and then use `sf::st_make_valid()` to make it valid. The first plot is correct, the second is not.\r\n\r\n    library(sf)\r\n    library(dplyr)\r\n    library(isoband)\r\n    library(ggplot2)\r\n\r\n    m <- matrix(\r\n      c(1.5, 1.5, 1.5, 1.5, 0.6, 0,\r\n        0.5, 1.5, 1.5,   0,   0, 0,\r\n        0,   1,   0,   1,   1, 0,\r\n        0,   1,   0, 0.7,   0, 0,\r\n        0.9, 1.3, 1.8, 1.4, 0.4, 0\r\n      ),\r\n      nrow = 5, ncol = 6, byrow = TRUE\r\n    )\r\n\r\n    b <- isobands(x = 1:6, y = 5:1, z = m, levels_low = 0:1, levels_high = 1:2)\r\n    bands <- iso_to_sfg(b)\r\n\r\n    # contains invalid geometries\r\n    iso <- st_sf(\r\n      id = factor(1:length(bands)),\r\n      geometry = st_sfc(bands)\r\n    )\r\n\r\n    # contains only valid geometries\r\n    iso_valid <- st_make_valid(iso)\r\n\r\n    # correct\r\n    ggplot(iso, aes(fill = id)) +\r\n      geom_sf() + theme(legend.position = \"bottom\")\r\n\r\n![](https://i.imgur.com/vEFEPn8.png)\r\n\r\n\r\n    # incorrect, id is ignored\r\n    ggplot(iso_valid, aes(fill = id)) +\r\n      geom_sf() + theme(legend.position = \"bottom\")\r\n\r\n![](https://i.imgur.com/Du5BulB.png)\r\n\r\n\r\n    # geometry type has changed from MULTIPOLYGON to GEOMETRYCOLLECTION\r\n    iso\r\n    #> Simple feature collection with 2 features and 1 field\r\n    #> geometry type:  MULTIPOLYGON\r\n    #> dimension:      XY\r\n    #> bbox:           xmin: 1 ymin: 1 xmax: 6 ymax: 5\r\n    #> CRS:            NA\r\n    #>   id                       geometry\r\n    #> 1  1 MULTIPOLYGON (((6 1, 5 1, 4...\r\n    #> 2  2 MULTIPOLYGON (((4.4 1, 4 1,...\r\n    iso_valid\r\n    #> Simple feature collection with 2 features and 1 field\r\n    #> geometry type:  GEOMETRYCOLLECTION\r\n    #> dimension:      XY\r\n    #> bbox:           xmin: 1 ymin: 1 xmax: 6 ymax: 5\r\n    #> CRS:            NA\r\n    #>   id                       geometry\r\n    #> 1  1 GEOMETRYCOLLECTION (POLYGON...\r\n    #> 2  2 GEOMETRYCOLLECTION (MULTIPO...\r\n\r\n<sup>Created on 2020-11-26 by the [reprex package](https://reprex.tidyverse.org) (v0.3.0)</sup>",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4273",
    "repository_url": "https://api.github.com/repos/tidyverse/ggplot2",
    "labels_url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4273/labels{/name}",
    "comments_url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4273/comments",
    "events_url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4273/events",
    "html_url": "https://github.com/tidyverse/ggplot2/issues/4273",
    "id": 750600242,
    "node_id": "MDU6SXNzdWU3NTA2MDAyNDI=",
    "number": 4273,
    "title": "user-defined transformation results in \"NAs not allowed\" error",
    "user": {
      "login": "BertrandSim",
      "id": 46756885,
      "node_id": "MDQ6VXNlcjQ2NzU2ODg1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/46756885?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/BertrandSim",
      "html_url": "https://github.com/BertrandSim",
      "followers_url": "https://api.github.com/users/BertrandSim/followers",
      "following_url": "https://api.github.com/users/BertrandSim/following{/other_user}",
      "gists_url": "https://api.github.com/users/BertrandSim/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/BertrandSim/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BertrandSim/subscriptions",
      "organizations_url": "https://api.github.com/users/BertrandSim/orgs",
      "repos_url": "https://api.github.com/users/BertrandSim/repos",
      "events_url": "https://api.github.com/users/BertrandSim/events{/privacy}",
      "received_events_url": "https://api.github.com/users/BertrandSim/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2020-11-25T08:20:23Z",
    "updated_at": "2020-11-25T16:09:56Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "The article mentioned in [this link](https://rpubs.com/huanfaChen/squash_remove_y_axix_ggplot) describes how to squash a part of a (positional) axis with a user-defined transformation. \r\n\r\nIn it, one uses `scales::trans_new` with appropriate `transform` and `inverse` arguments to do so.\r\n\r\nHowever, running the code results in \r\n```\r\n# Error in x[isq] <- from + (x[isq] - from) * factor :\r\n#   NAs are not allowed in subscripted assignments\r\n```\r\n\r\nThe article contains output without errors, thus it may have worked in an older version.\r\n\r\nHere is the full code\r\n\r\n```r\r\nlibrary(ggplot2)\r\nlibrary(scales)\r\n\r\ndat <- data.frame(group=rep(c('A', 'B', 'C', 'D'), each = 10), \r\n                 value=c(rnorm(10), rnorm(10)+100)\r\n                 )\r\n\r\nsquash_axis <- function(from, to, factor) { \r\n    # A transformation function that squashes the range of [from, to] by factor on a given axis \r\n\r\n    # Args:\r\n    #   from: left end of the axis\r\n    #   to: right end of the axis\r\n    #   factor: the compression factor of the range [from, to]\r\n    #\r\n    # Returns:\r\n    #   A transformation called \"squash_axis\", which is capsulated by trans_new() function\r\n\r\n  trans <- function(x) {    \r\n      # get indices for the relevant regions\r\n      isq <- x > from & x < to\r\n      ito <- x >= to\r\n\r\n      # apply transformation\r\n      x[isq] <- from + (x[isq] - from)/factor\r\n      x[ito] <- from + (to - from)/factor + (x[ito] - to)\r\n\r\n      return(x)\r\n  }\r\n\r\n  inv <- function(x) {\r\n\r\n      # get indices for the relevant regions\r\n      isq <- x > from & x < from + (to - from)/factor\r\n      ito <- x >= from + (to - from)/factor\r\n\r\n      # apply transformation\r\n      x[isq] <- from + (x[isq] - from) * factor\r\n      x[ito] <- to + (x[ito] - (from + (to - from)/factor))\r\n\r\n      return(x)\r\n  }\r\n\r\n# return the transformation\r\n  return(trans_new(\"squash_axis\", trans, inv))\r\n}\r\n\r\nggplot(dat,aes(x=group,y=value)) +\r\n  geom_point() +\r\n  scale_y_continuous(trans = squash_axis(5, 95, 10))\r\n\r\n```\r\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4271",
    "repository_url": "https://api.github.com/repos/tidyverse/ggplot2",
    "labels_url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4271/labels{/name}",
    "comments_url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4271/comments",
    "events_url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4271/events",
    "html_url": "https://github.com/tidyverse/ggplot2/pull/4271",
    "id": 746707637,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NTI0MDU0ODQz",
    "number": 4271,
    "title": "WIP: set common scale parameters outside of the scale function",
    "user": {
      "login": "clauswilke",
      "id": 4210929,
      "node_id": "MDQ6VXNlcjQyMTA5Mjk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4210929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/clauswilke",
      "html_url": "https://github.com/clauswilke",
      "followers_url": "https://api.github.com/users/clauswilke/followers",
      "following_url": "https://api.github.com/users/clauswilke/following{/other_user}",
      "gists_url": "https://api.github.com/users/clauswilke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/clauswilke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/clauswilke/subscriptions",
      "organizations_url": "https://api.github.com/users/clauswilke/orgs",
      "repos_url": "https://api.github.com/users/clauswilke/repos",
      "events_url": "https://api.github.com/users/clauswilke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/clauswilke/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 11,
    "created_at": "2020-11-19T15:56:53Z",
    "updated_at": "2020-11-22T23:46:57Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "pull_request": {
      "url": "https://api.github.com/repos/tidyverse/ggplot2/pulls/4271",
      "html_url": "https://github.com/tidyverse/ggplot2/pull/4271",
      "diff_url": "https://github.com/tidyverse/ggplot2/pull/4271.diff",
      "patch_url": "https://github.com/tidyverse/ggplot2/pull/4271.patch"
    },
    "body": "Here is an attempt at fixing #4269. The PR creates a new `scales_params` object type that can be added to ggplot2 objects to collect parameter values that will be added to scales at plot build time. In this way, we can set properties such as expansion or breaks or labels without knowing which scales object is being used for which aesthetic.\r\n\r\nReprex:\r\n    library(ggplot2)\r\n\r\n    ggplot(mtcars, aes(disp, mpg, color = hp)) + geom_point() +\r\n      ggplot2:::scales_params(\"x\", breaks = c(111, 222, 333, 444), name = \"hello world\") +\r\n      ggplot2:::scales_params(\"colour\", name = \"test\") +\r\n      ggplot2:::scales_params(\"x\", name = \"displacement\") +\r\n      ggplot2:::scales_params(\"y\", name = \"fuel efficiency\", expand = expansion(add = 10)) +\r\n      scale_y_continuous(name = \"test\", expand = expansion(add = 0)) +\r\n      ggplot2:::scales_params(\"y\", breaks = c(15, 25, 35))\r\n\r\n![](https://i.imgur.com/qXaRNVX.png)\r\n\r\n<sup>Created on 2020-11-19 by the [reprex package](https://reprex.tidyverse.org) (v0.3.0)</sup>\r\n\r\nOne current downside is that parameters directly provided to a scale object have lower priority than parameters added previously (see the y expansion in the example). This can be fixed but will add a bit of complication and clumsiness. Not sure if it's worth it but happy to receive feedback.\r\n\r\n@yutannihilation @thomasp85 @hadley Any thoughts?",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4269",
    "repository_url": "https://api.github.com/repos/tidyverse/ggplot2",
    "labels_url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4269/labels{/name}",
    "comments_url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4269/comments",
    "events_url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4269/events",
    "html_url": "https://github.com/tidyverse/ggplot2/issues/4269",
    "id": 745109595,
    "node_id": "MDU6SXNzdWU3NDUxMDk1OTU=",
    "number": 4269,
    "title": "Set common scale parameters outside of the scale function",
    "user": {
      "login": "clauswilke",
      "id": 4210929,
      "node_id": "MDQ6VXNlcjQyMTA5Mjk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4210929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/clauswilke",
      "html_url": "https://github.com/clauswilke",
      "followers_url": "https://api.github.com/users/clauswilke/followers",
      "following_url": "https://api.github.com/users/clauswilke/following{/other_user}",
      "gists_url": "https://api.github.com/users/clauswilke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/clauswilke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/clauswilke/subscriptions",
      "organizations_url": "https://api.github.com/users/clauswilke/orgs",
      "repos_url": "https://api.github.com/users/clauswilke/repos",
      "events_url": "https://api.github.com/users/clauswilke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/clauswilke/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2020-11-17T21:43:34Z",
    "updated_at": "2020-11-17T22:03:29Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "A problem that pops up repeatedly in different contexts is that we may want to adjust certain scale parameters without explicitly calling a scale function. We already have some support for this, e.g. with `xlim()` to set limits on the x position scale or `xlab()` to set its title, but there are numerous other scenarios where the same problem arises. Here are some examples:\r\n\r\n- We may want to set scale expansions: #3962 \r\n- We may want to set breaks or limits, including for non-position scale functions: https://github.com/tidyverse/ggplot2/pull/3973#issuecomment-621879755\r\n- We may want to specify `drop = FALSE` on discrete scales: https://github.com/tidyverse/ggplot2/issues/4268#issuecomment-729224543\r\n\r\nIt would be good if we could come up with a generic approach to these issues. I note that `xlim()` and `xlab()` use entirely different implementation approaches currently, so that's not promising:\r\n\r\n- `xlim()` and `ylim()` use the `ggplot2:::limits()` function to automatically generate a scale function and give it the appropriate parameter settings:\r\nhttps://github.com/tidyverse/ggplot2/blob/3be0acce79dc295d5470d949c60de1b9c84a6fc9/R/limits.r#L112-L160\r\n\r\n- `xlab()` and `ylab()` ultimately feed their info to the `update_labels()` function, which writes to a special `plot$labels` field that the layout reads from:\r\nhttps://github.com/tidyverse/ggplot2/blob/3aa29375167946b970692e42241e9aabaee3ae03/R/labels.r#L13-L17\r\nhttps://github.com/tidyverse/ggplot2/blob/660aad2db2b3495ae0d8040915a40d247133ffc0/R/plot-build.r#L170\r\nhttps://github.com/tidyverse/ggplot2/blob/b76fa9639215785f8e94874d3bdf02225bae898a/R/layout.R#L107-L113\r\n\r\nNeither approach generalizes directly to the other use cases. I also have concerns about the way `xlim()` and `ylim()` are implemented, because the fact that they add explicit scales functions is not obvious and can lead to strange behavior.  See e.g. the following reprex, where in the first plot the call to `scale_x_continuous()` overwrites the `xlim()` call but in the second plot the `xlab()` call is not overwritten:\r\n\r\n    library(ggplot2)\r\n\r\n    ggplot(mtcars, aes(disp, mpg)) +\r\n      geom_point() +\r\n      xlim(100, 300) +\r\n      scale_x_continuous(name = \"Displacement\")\r\n    #> Scale for 'x' is already present. Adding another scale for 'x', which will\r\n    #> replace the existing scale.\r\n\r\n![](https://i.imgur.com/o6emEot.png)\r\n\r\n\r\n    ggplot(mtcars, aes(disp, mpg)) +\r\n      geom_point() +\r\n      xlab(\"Displacement\") +\r\n      scale_x_continuous(limits = c(100, 300))\r\n    #> Warning: Removed 16 rows containing missing values (geom_point).\r\n\r\n![](https://i.imgur.com/YhDgWHA.png)\r\n\r\n<sup>Created on 2020-11-17 by the [reprex package](https://reprex.tidyverse.org) (v0.3.0)</sup>",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4265",
    "repository_url": "https://api.github.com/repos/tidyverse/ggplot2",
    "labels_url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4265/labels{/name}",
    "comments_url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4265/comments",
    "events_url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4265/events",
    "html_url": "https://github.com/tidyverse/ggplot2/pull/4265",
    "id": 743199026,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NTIxMTU1NDE4",
    "number": 4265,
    "title": "Fix `after_scale()` with plot mappings",
    "user": {
      "login": "yutannihilation",
      "id": 1978793,
      "node_id": "MDQ6VXNlcjE5Nzg3OTM=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1978793?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yutannihilation",
      "html_url": "https://github.com/yutannihilation",
      "followers_url": "https://api.github.com/users/yutannihilation/followers",
      "following_url": "https://api.github.com/users/yutannihilation/following{/other_user}",
      "gists_url": "https://api.github.com/users/yutannihilation/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yutannihilation/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yutannihilation/subscriptions",
      "organizations_url": "https://api.github.com/users/yutannihilation/orgs",
      "repos_url": "https://api.github.com/users/yutannihilation/repos",
      "events_url": "https://api.github.com/users/yutannihilation/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yutannihilation/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 7,
    "created_at": "2020-11-15T07:06:07Z",
    "updated_at": "2020-12-06T08:17:52Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "pull_request": {
      "url": "https://api.github.com/repos/tidyverse/ggplot2/pulls/4265",
      "html_url": "https://github.com/tidyverse/ggplot2/pull/4265",
      "diff_url": "https://github.com/tidyverse/ggplot2/pull/4265.diff",
      "patch_url": "https://github.com/tidyverse/ggplot2/pull/4265.patch"
    },
    "body": "Fix #4260\r\n\r\n~~This feels a bit uneasy to repeat `defaults(layer$mapping, plot$mapping)` everywhere, but I don't come up with a nice idea... Any suggestions are welcome.~~ This pull request moves `defaults(layer$mapping, plot$mapping)` to `setup_layer()` so that we don't need to do it in individual methods that refer to the mapping.\r\n\r\n``` r\r\ndevtools::load_all(\"~/repo/ggplot2\")\r\n#> Loading ggplot2\r\n\r\nggplot(mpg, aes(class, hwy, colour = class, fill = after_scale(alpha(colour, 0.4)))) +\r\n  geom_boxplot()\r\n```\r\n\r\n![](https://i.imgur.com/4c51kq6.png)\r\n\r\n<sup>Created on 2020-11-15 by the [reprex package](https://reprex.tidyverse.org) (v0.3.0)</sup>\r\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4260",
    "repository_url": "https://api.github.com/repos/tidyverse/ggplot2",
    "labels_url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4260/labels{/name}",
    "comments_url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4260/comments",
    "events_url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4260/events",
    "html_url": "https://github.com/tidyverse/ggplot2/issues/4260",
    "id": 738244416,
    "node_id": "MDU6SXNzdWU3MzgyNDQ0MTY=",
    "number": 4260,
    "title": "after_scale() in the initial ggplot() call",
    "user": {
      "login": "mikmart",
      "id": 13412395,
      "node_id": "MDQ6VXNlcjEzNDEyMzk1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/13412395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mikmart",
      "html_url": "https://github.com/mikmart",
      "followers_url": "https://api.github.com/users/mikmart/followers",
      "following_url": "https://api.github.com/users/mikmart/following{/other_user}",
      "gists_url": "https://api.github.com/users/mikmart/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mikmart/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mikmart/subscriptions",
      "organizations_url": "https://api.github.com/users/mikmart/orgs",
      "repos_url": "https://api.github.com/users/mikmart/repos",
      "events_url": "https://api.github.com/users/mikmart/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mikmart/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-11-07T13:38:22Z",
    "updated_at": "2020-11-15T06:39:29Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "\r\nConsider the `after_scale()` example from `?aes_eval`:\r\n\r\n``` r\r\nlibrary(ggplot2) # tidyverse/ggplot2@a132727\r\n\r\nggplot(mpg, aes(class, hwy)) +\r\n  geom_boxplot(aes(colour = class, fill = after_scale(alpha(colour, 0.4))))\r\n```\r\n\r\n![](https://i.imgur.com/fgAIK0X.png)\r\n\r\nMoving the colour and fill specification form the geom to the initial `ggplot()` call causes the fill to not be mapped at all:\r\n\r\n``` r\r\nggplot(mpg, aes(class, hwy, colour = class, fill = after_scale(alpha(colour, 0.4)))) +\r\n  geom_boxplot()\r\n```\r\n\r\n![](https://i.imgur.com/kqS2xQ8.png)\r\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4258",
    "repository_url": "https://api.github.com/repos/tidyverse/ggplot2",
    "labels_url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4258/labels{/name}",
    "comments_url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4258/comments",
    "events_url": "https://api.github.com/repos/tidyverse/ggplot2/issues/4258/events",
    "html_url": "https://github.com/tidyverse/ggplot2/issues/4258",
    "id": 736181112,
    "node_id": "MDU6SXNzdWU3MzYxODExMTI=",
    "number": 4258,
    "title": "Suggestion: Point out which continuous/discrete value was wrongly supplied to which discrete/continuous scale",
    "user": {
      "login": "jgigla",
      "id": 16595351,
      "node_id": "MDQ6VXNlcjE2NTk1MzUx",
      "avatar_url": "https://avatars1.githubusercontent.com/u/16595351?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jgigla",
      "html_url": "https://github.com/jgigla",
      "followers_url": "https://api.github.com/users/jgigla/followers",
      "following_url": "https://api.github.com/users/jgigla/following{/other_user}",
      "gists_url": "https://api.github.com/users/jgigla/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jgigla/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jgigla/subscriptions",
      "organizations_url": "https://api.github.com/users/jgigla/orgs",
      "repos_url": "https://api.github.com/users/jgigla/repos",
      "events_url": "https://api.github.com/users/jgigla/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jgigla/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2020-11-04T14:56:40Z",
    "updated_at": "2021-01-12T19:22:45Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "When working with very complex plots, with many different values, mappings, and scales, it often happens that I mix something up and accidentally supply a continuous value to a discrete scale, or vice versa. In this case, while ggplot does tell me which way the mix-up occurred, it does not tell me *which value* was specifically wrongly supplied to *which scale*. Instead, I have to figure this out myself, often by frustrating trial-and-error if it is not immediately obvious from the code.\r\n\r\nI would love it if the error message included:\r\n\r\n- the name of the scale which a continuous/discrete value was wrongly supplied to,\r\n- the aesthetic which is mapped to this scale,\r\n- and the value which is mapped to this aesthetic.\r\n- Possibly even more useful information that is available internally, that I am not aware of?\r\n\r\nHere is some reproducible code to illustrate my problem:\r\n\r\n```r\r\nlibrary(tidyverse)\r\n\r\nset.seed(0)\r\n\r\ndf = tibble(col1 = rnorm(6) * 100,\r\n            col2 = factor(c(100, 100, 101, 101, 102, 102)),\r\n            col3 = rnorm(6),\r\n            col4 = factor(c(1, 2, 1, 3, 5, 2)))\r\n\r\ndf %>% ggplot(mapping = aes(x = col1, y = col2, fill = col3, colour = col4)) +\r\n  geom_point(pch = 21, size = 10, stroke = 3) +\r\n  scale_fill_viridis_d(option = \"viridis\") +\r\n  scale_colour_viridis_d(option = \"magma\")\r\n```\r\n\r\nWhen I run this, I get the dreaded:\r\n\r\n```\r\nError: Continuous value supplied to discrete scale\r\n```\r\n\r\nHowever, finding out which scale would be changed—in this case, to be continuous—requires reading and understanding the code. (Of course, in this case, it is the `fill` scale, but can you see this at first glance?) It is even harder to do if:\r\n\r\n- the plot is assembled at distant code locations; for example when a \"barebones\" plot only with geoms is constructed, and then \"finished off\" with scales/labs/etc. further down in the script; especially if the same plot can be \"finished off\" in multiple different ways\r\n- the same aesthetic has multiple values mapped to multiple scales (using something like `ggnewscale`)\r\n- there are scales involved where it is not immediately obvious whether they are discrete or continuous, particularly if they are supplied by another external module\r\n- binned scales are involved\r\n- you are new to `ggplot2` and don't even know what the error message is trying to tell you in the first place...\r\n- and so on\r\n\r\nNow my simple suggestion would be to amend the error message, so it reads for example:\r\n\r\n```\r\nError: Continuous value (col3) supplied to discrete scale (\"viridis\") for aesthetic \"fill\"\r\n```\r\n\r\nI'm sure the exact wording can be improved; this is just an idea. I don't know how much effort this would be to implement, but it would certainly improve my quality of life a lot, and perhaps even that of others.",
    "performed_via_github_app": null
  }
]